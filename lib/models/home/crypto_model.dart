///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CryptoModelDataQuoteUSD {
/*
{
  "price": 29465.834204069386,
  "volume_24h": 15439641006.088404,
  "volume_change_24h": 70.5694,
  "percent_change_1h": 0.06477679,
  "percent_change_24h": 1.57663915,
  "percent_change_7d": 2.02251608,
  "percent_change_30d": -2.81012398,
  "percent_change_60d": 10.51367924,
  "percent_change_90d": 4.61489317,
  "market_cap": 573151727437.0353,
  "market_cap_dominance": 48.8199,
  "fully_diluted_market_cap": 618782518285.46,
  "tvl": "null",
  "last_updated": "2023-08-08T13:32:00.000Z"
}
*/

  double? price;
  double? volume_24h;
  double? volumeChange_24h;
  double? percentChange_1h;
  double? percentChange_24h;
  double? percentChange_7d;
  double? percentChange_30d;
  double? percentChange_60d;
  double? percentChange_90d;
  double? marketCap;
  double? marketCapDominance;
  double? fullyDilutedMarketCap;
  String? tvl;
  String? lastUpdated;

  CryptoModelDataQuoteUSD({
    this.price,
    this.volume_24h,
    this.volumeChange_24h,
    this.percentChange_1h,
    this.percentChange_24h,
    this.percentChange_7d,
    this.percentChange_30d,
    this.percentChange_60d,
    this.percentChange_90d,
    this.marketCap,
    this.marketCapDominance,
    this.fullyDilutedMarketCap,
    this.tvl,
    this.lastUpdated,
  });
  CryptoModelDataQuoteUSD.fromJson(Map<String, dynamic> json) {
    price = json['price']?.toDouble();
    volume_24h = json['volume_24h']?.toDouble();
    volumeChange_24h = json['volume_change_24h']?.toDouble();
    percentChange_1h = json['percent_change_1h']?.toDouble();
    percentChange_24h = json['percent_change_24h']?.toDouble();
    percentChange_7d = json['percent_change_7d']?.toDouble();
    percentChange_30d = json['percent_change_30d']?.toDouble();
    percentChange_60d = json['percent_change_60d']?.toDouble();
    percentChange_90d = json['percent_change_90d']?.toDouble();
    marketCap = json['market_cap']?.toDouble();
    marketCapDominance = json['market_cap_dominance']?.toDouble();
    fullyDilutedMarketCap = json['fully_diluted_market_cap']?.toDouble();
    tvl = json['tvl']?.toString();
    lastUpdated = json['last_updated']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['price'] = price;
    data['volume_24h'] = volume_24h;
    data['volume_change_24h'] = volumeChange_24h;
    data['percent_change_1h'] = percentChange_1h;
    data['percent_change_24h'] = percentChange_24h;
    data['percent_change_7d'] = percentChange_7d;
    data['percent_change_30d'] = percentChange_30d;
    data['percent_change_60d'] = percentChange_60d;
    data['percent_change_90d'] = percentChange_90d;
    data['market_cap'] = marketCap;
    data['market_cap_dominance'] = marketCapDominance;
    data['fully_diluted_market_cap'] = fullyDilutedMarketCap;
    data['tvl'] = tvl;
    data['last_updated'] = lastUpdated;
    return data;
  }
}

class CryptoModelDataQuote {
/*
{
  "USD": {
    "price": 29465.834204069386,
    "volume_24h": 15439641006.088404,
    "volume_change_24h": 70.5694,
    "percent_change_1h": 0.06477679,
    "percent_change_24h": 1.57663915,
    "percent_change_7d": 2.02251608,
    "percent_change_30d": -2.81012398,
    "percent_change_60d": 10.51367924,
    "percent_change_90d": 4.61489317,
    "market_cap": 573151727437.0353,
    "market_cap_dominance": 48.8199,
    "fully_diluted_market_cap": 618782518285.46,
    "tvl": "null",
    "last_updated": "2023-08-08T13:32:00.000Z"
  }
}
*/

  CryptoModelDataQuoteUSD? USD;

  CryptoModelDataQuote({
    this.USD,
  });
  CryptoModelDataQuote.fromJson(Map<String, dynamic> json) {
    USD = (json['USD'] != null) ? CryptoModelDataQuoteUSD.fromJson(json['USD']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (USD != null) {
      data['USD'] = USD!.toJson();
    }
    return data;
  }
}

class CryptoModelData {
/*
{
  "id": 1,
  "name": "Bitcoin",
  "symbol": "BTC",
  "slug": "bitcoin",
  "num_market_pairs": 10386,
  "date_added": "2010-07-13T00:00:00.000Z",
  "tags": [
    "mineable"
  ],
  "max_supply": 21000000,
  "circulating_supply": 19451400,
  "total_supply": 19451400,
  "infinite_supply": false,
  "platform": "null",
  "cmc_rank": 1,
  "self_reported_circulating_supply": "null",
  "self_reported_market_cap": "null",
  "tvl_ratio": "null",
  "last_updated": "2023-08-08T13:32:00.000Z",
  "quote": {
    "USD": {
      "price": 29465.834204069386,
      "volume_24h": 15439641006.088404,
      "volume_change_24h": 70.5694,
      "percent_change_1h": 0.06477679,
      "percent_change_24h": 1.57663915,
      "percent_change_7d": 2.02251608,
      "percent_change_30d": -2.81012398,
      "percent_change_60d": 10.51367924,
      "percent_change_90d": 4.61489317,
      "market_cap": 573151727437.0353,
      "market_cap_dominance": 48.8199,
      "fully_diluted_market_cap": 618782518285.46,
      "tvl": "null",
      "last_updated": "2023-08-08T13:32:00.000Z"
    }
  }
}
*/

  int? id;
  String? name;
  String? symbol;
  String? slug;
  int? numMarketPairs;
  String? dateAdded;
  List<String?>? tags;
  int? maxSupply;
  int? circulatingSupply;
  int? totalSupply;
  bool? infiniteSupply;
  String? platform;
  int? cmcRank;
  String? selfReportedCirculatingSupply;
  String? selfReportedMarketCap;
  String? tvlRatio;
  String? lastUpdated;
  CryptoModelDataQuote? quote;
  bool? isFav ;

  CryptoModelData({
    this.id,
    this.name,
    this.symbol,
    this.slug,
    this.numMarketPairs,
    this.dateAdded,
    this.tags,
    this.maxSupply,
    this.circulatingSupply,
    this.totalSupply,
    this.infiniteSupply,
    this.platform,
    this.cmcRank,
    this.selfReportedCirculatingSupply,
    this.selfReportedMarketCap,
    this.tvlRatio,
    this.lastUpdated,
    this.quote,
    this.isFav =false,
  });
  CryptoModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    symbol = json['symbol']?.toString();
    slug = json['slug']?.toString();
    numMarketPairs = json['num_market_pairs']?.toInt();
    dateAdded = json['date_added']?.toString();
    if (json['tags'] != null) {
      final v = json['tags'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      tags = arr0;
    }
    maxSupply = json['max_supply']?.toInt();
    circulatingSupply = json['circulating_supply']?.toInt();
    totalSupply = json['total_supply']?.toInt();
    infiniteSupply = json['infinite_supply'];
    platform = json['platform']?.toString();
    cmcRank = json['cmc_rank']?.toInt();
    selfReportedCirculatingSupply = json['self_reported_circulating_supply']?.toString();
    selfReportedMarketCap = json['self_reported_market_cap']?.toString();
    tvlRatio = json['tvl_ratio']?.toString();
    lastUpdated = json['last_updated']?.toString();
    quote = (json['quote'] != null) ? CryptoModelDataQuote.fromJson(json['quote']) : null;
    isFav = false;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['symbol'] = symbol;
    data['slug'] = slug;
    data['num_market_pairs'] = numMarketPairs;
    data['date_added'] = dateAdded;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['tags'] = arr0;
    }
    data['max_supply'] = maxSupply;
    data['circulating_supply'] = circulatingSupply;
    data['total_supply'] = totalSupply;
    data['infinite_supply'] = infiniteSupply;
    data['platform'] = platform;
    data['cmc_rank'] = cmcRank;
    data['self_reported_circulating_supply'] = selfReportedCirculatingSupply;
    data['self_reported_market_cap'] = selfReportedMarketCap;
    data['tvl_ratio'] = tvlRatio;
    data['last_updated'] = lastUpdated;

    if (quote != null) {
      data['quote'] = quote!.toJson();
    }
    return data;
  }
}

class CryptoModelStatus {
/*
{
  "timestamp": "2023-08-08T13:34:00.941Z",
  "error_code": 0,
  "error_message": "null",
  "elapsed": 243,
  "credit_count": 1,
  "notice": "null",
  "total_count": 9750
}
*/

  String? timestamp;
  int? errorCode;
  String? errorMessage;
  int? elapsed;
  int? creditCount;
  String? notice;
  int? totalCount;

  CryptoModelStatus({
    this.timestamp,
    this.errorCode,
    this.errorMessage,
    this.elapsed,
    this.creditCount,
    this.notice,
    this.totalCount,
  });
  CryptoModelStatus.fromJson(Map<String, dynamic> json) {
    timestamp = json['timestamp']?.toString();
    errorCode = json['error_code']?.toInt();
    errorMessage = json['error_message']?.toString();
    elapsed = json['elapsed']?.toInt();
    creditCount = json['credit_count']?.toInt();
    notice = json['notice']?.toString();
    totalCount = json['total_count']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['timestamp'] = timestamp;
    data['error_code'] = errorCode;
    data['error_message'] = errorMessage;
    data['elapsed'] = elapsed;
    data['credit_count'] = creditCount;
    data['notice'] = notice;
    data['total_count'] = totalCount;
    return data;
  }
}

class CryptoModel {
/*
{
  "status": {
    "timestamp": "2023-08-08T13:34:00.941Z",
    "error_code": 0,
    "error_message": "null",
    "elapsed": 243,
    "credit_count": 1,
    "notice": "null",
    "total_count": 9750
  },
  "data": [
    {
      "id": 1,
      "name": "Bitcoin",
      "symbol": "BTC",
      "slug": "bitcoin",
      "num_market_pairs": 10386,
      "date_added": "2010-07-13T00:00:00.000Z",
      "tags": [
        "mineable"
      ],
      "max_supply": 21000000,
      "circulating_supply": 19451400,
      "total_supply": 19451400,
      "infinite_supply": false,
      "platform": "null",
      "cmc_rank": 1,
      "self_reported_circulating_supply": "null",
      "self_reported_market_cap": "null",
      "tvl_ratio": "null",
      "last_updated": "2023-08-08T13:32:00.000Z",
      "quote": {
        "USD": {
          "price": 29465.834204069386,
          "volume_24h": 15439641006.088404,
          "volume_change_24h": 70.5694,
          "percent_change_1h": 0.06477679,
          "percent_change_24h": 1.57663915,
          "percent_change_7d": 2.02251608,
          "percent_change_30d": -2.81012398,
          "percent_change_60d": 10.51367924,
          "percent_change_90d": 4.61489317,
          "market_cap": 573151727437.0353,
          "market_cap_dominance": 48.8199,
          "fully_diluted_market_cap": 618782518285.46,
          "tvl": "null",
          "last_updated": "2023-08-08T13:32:00.000Z"
        }
      }
    }
  ]
}
*/

  CryptoModelStatus? status;
  List<CryptoModelData?>? data;

  CryptoModel({
    this.status,
    this.data,
  });
  CryptoModel.fromJson(Map<String, dynamic> json) {
    status = (json['status'] != null) ? CryptoModelStatus.fromJson(json['status']) : null;
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <CryptoModelData>[];
      v.forEach((v) {
        arr0.add(CryptoModelData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (status != null) {
      data['status'] = status!.toJson();
    }
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}

